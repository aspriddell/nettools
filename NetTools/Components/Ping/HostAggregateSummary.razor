@using NetTools.Models

<div style="@($"height: max(25vh, {50 + HostResponses.Count() * 35}px)")">
    <ApexChart TItem="PingResult" Title="Packet Delivery" Options="_packetLossChartOptions" @ref="_packetLossChart">
        <ApexPointSeries TItem="PingResult"
                         Items="HostResponses.SelectMany(x => x)"
                         Name="Packets Received"
                         SeriesType="SeriesType.Bar"
                         ShowDataLabels
                         XValue="@(e => e.Destination)"
                         YAggregate="@(e => e.Sum(x => x.PacketsReceived))"/>

        <ApexPointSeries TItem="PingResult"
                         Items="HostResponses.SelectMany(x => x)"
                         Name="Packets Lost"
                         SeriesType="SeriesType.Bar"
                         ShowDataLabels
                         XValue="@(e => e.Destination)"
                         YAggregate="@(e => (decimal)e.Sum(x => x.PacketsTransmitted - x.PacketsReceived))"/>
    </ApexChart>
</div>

<HostSummaryTable HostResponses="HostResponses"/>

@{
    _packetLossChart?.RenderAsync();
}

@code {

    private ApexChart<PingResult> _packetLossChart;

    private readonly ApexChartOptions<PingResult> _packetLossChartOptions = new()
    {
        Colors = ["#4caf4f", "#f44336"],
        Theme = new Theme { Mode = Mode.Dark },
        Legend = new Legend { Position = LegendPosition.Bottom },
        PlotOptions = new PlotOptions { Bar = new PlotOptionsBar { Horizontal = true } },
        Chart = new Chart { Height = "100%", Stacked = true, StackType = StackType.Percent100 },
    };

    [Parameter]
    public ILookup<string, PingResult> HostResponses { get; set; }

    private bool AllHaveTimestamps { get; set; }

    protected override void OnParametersSet()
    {
        AllHaveTimestamps = HostResponses.All(x => x.All(y => y.Timestamp.HasValue));
    }

}