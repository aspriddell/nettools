@page "/traceroute"
@using RoutingVisualiser.Models

<div class="d-flex flex-column gap-3">
    @if (HostTraces?.Any() == true)
    {
        <div class="d-flex gap-4 align-items-center w-100">
            <HxSelect Label="Host"
                      Nullable="false"
                      Data="@HostTraces"
                      @bind-Value="SelectedHost"
                      TextSelector="@(x => x.Key)"
                      ValueSelector="@(x => x)"/>

            <HxSelect Label="Route"
                      Nullable="false"
                      Value="SelectedTrace"
                      ValueChanged="SetTrace"
                      Data="@(HostTraces[SelectedHost])"
                      ValueSelector="@(x => x)"
                      SortKeySelector="x => x.Id"
                      TextSelector="@(x => $"Route {x.Id}")"/>
        </div>
    }

    <FileSubmissionComponent TItem="TracerouteResult"
                             TOut="TracerouteRouteGroup"
                             @bind-Current="Traces"
                             ProcessItems="ProcessRoutes"/>

    <div id="map" class="map-container"></div>
    
    @if (SelectedTrace != null)
    {
        <table class="table">
            <thead>
            <tr>
                <th scope="col">Hop #</th>
                <th scope="col">Country</th>
                <th scope="col">Name</th>
                <th scope="col">IP Address</th>
                <th scope="col">Roundtrip Time (ms)</th>
            </tr>
            </thead>
            <tbody>
            @{
                var i = 1;
                foreach (var hop in SelectedTrace.Hops)
                {
                    if (hop == null)
                    {
                        <tr>
                            <th scope="row">@(i++)</th>
                            <td>
                                <img alt="unknown country" src="https://cdn.jsdelivr.net/gh/ppy/osu-resources@2024.410.0/osu.Game.Resources/Textures/Flags/__.png" height="20"/>
                            </td>
                            <td>-</td>
                            <td>-</td>
                            <td>- (timed out)</td>
                        </tr>
                    }
                    else
                    {
                        var ipInfo = HostGeolocationCache.GetValueOrDefault(hop.IP);
                        
                        <tr>
                            <th scope="row">@(i++)</th>
                            <td>
                                <div class="d-flex align-items-center gap-3">
                                    <img alt="country flag" src=@($"https://cdn.jsdelivr.net/gh/ppy/osu-resources@2024.410.0/osu.Game.Resources/Textures/Flags/{ipInfo?.CountryCode?.ToUpperInvariant() ?? "__"}.png") height="20"/>
                                    @if (!string.IsNullOrEmpty(ipInfo?.City))
                                    {
                                        <span>@ipInfo.City, @ipInfo.Country</span>
                                    }
                                    else if (!string.IsNullOrEmpty(ipInfo?.Country))
                                    {
                                        <span>@ipInfo.Country</span>
                                    }
                                </div>
                            </td>
                            <td>@hop.Name</td>
                            <td>@hop.IP.ToString()</td>
                            <td>@hop.RoundtripTimeMs.ToString("f3")</td>
                        </tr>
                    }
                }
            }
            </tbody>
        </table>
    }
</div>